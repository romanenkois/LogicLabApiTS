import { MongoDB } from '@database';
import { CommentSchema } from '@schemas';

export class CommentsService {
  public static async getCommentsOfLesson(
    lessonHref: string
  ): Promise<CommentSchema[]> {
    const db = await MongoDB.getDB();

    const comments: CommentSchema[] = await db
      .collection<CommentSchema>('comments')
      .find({ lessonHref: lessonHref })
      .toArray();

    return comments ? comments : [];
  }

  public static async createNewComment(
    comment: Omit<CommentSchema, '_id' | 'createdAt' | 'updatedAt'>
  ): Promise<CommentSchema | null> {
    const db = await MongoDB.getDB();

    const _comment: Omit<CommentSchema, '_id'> = {
      ...comment,
      createdAt: new Date(),
      updatedAt: new Date(),
    };

    const response = await db
      // we omit the id couse it will be generated by the database on its own
      .collection<Omit<CommentSchema, '_id'>>('comments')
      .insertOne(_comment);

    if (response.insertedId) {
      const comment__ = await db
        .collection<CommentSchema>('comments')
        .findOne({ _id: response.insertedId });

      if (comment__) {
        return comment__;
      }
    }
    return null;
  }
}
